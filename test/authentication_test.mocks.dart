// Mocks generated by Mockito 5.0.7 from annotations
// in dart_authentication_service/test/authentication_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:dart_authentication_service/src/authentication_result.dart'
    as _i2;
import 'package:dart_authentication_service/src/providers/cognito_provider.dart'
    as _i3;
import 'package:dart_authentication_service/src/user.dart' as _i5;
import 'package:hive/hive.dart' as _i6;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: comment_references
// ignore_for_file: unnecessary_parenthesis

// ignore_for_file: prefer_const_constructors

// ignore_for_file: avoid_redundant_argument_values

class _FakeAuthenticationResult extends _i1.Fake
    implements _i2.AuthenticationResult {}

class _FakeAuthenticationAttributesResult extends _i1.Fake
    implements _i2.AuthenticationAttributesResult {}

/// A class which mocks [CognitoProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockCognitoProvider extends _i1.Mock implements _i3.CognitoProvider {
  MockCognitoProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.AuthenticationResult> isLoggedIn(_i5.User? user) =>
      (super.noSuchMethod(Invocation.method(#isLoggedIn, [user]),
              returnValue: Future<_i2.AuthenticationResult>.value(
                  _FakeAuthenticationResult()))
          as _i4.Future<_i2.AuthenticationResult>);
  @override
  _i4.Future<_i2.AuthenticationResult> logIn(
          {String? username, String? password}) =>
      (super.noSuchMethod(
              Invocation.method(
                  #logIn, [], {#username: username, #password: password}),
              returnValue: Future<_i2.AuthenticationResult>.value(
                  _FakeAuthenticationResult()))
          as _i4.Future<_i2.AuthenticationResult>);
  @override
  _i4.Future<_i2.AuthenticationResult> createUser(
          {String? username,
          String? password,
          Map<String, String>? properties}) =>
      (super.noSuchMethod(
              Invocation.method(#createUser, [], {
                #username: username,
                #password: password,
                #properties: properties
              }),
              returnValue: Future<_i2.AuthenticationResult>.value(
                  _FakeAuthenticationResult()))
          as _i4.Future<_i2.AuthenticationResult>);
  @override
  _i4.Future<_i2.AuthenticationResult> resendVerificationCode(
          {String? username}) =>
      (super.noSuchMethod(
          Invocation.method(#resendVerificationCode, [], {#username: username}),
          returnValue: Future<_i2.AuthenticationResult>.value(
              _FakeAuthenticationResult())) as _i4
          .Future<_i2.AuthenticationResult>);
  @override
  _i4.Future<_i2.AuthenticationResult> verifyUser(
          {_i5.User? user, String? code}) =>
      (super.noSuchMethod(
              Invocation.method(#verifyUser, [], {#user: user, #code: code}),
              returnValue: Future<_i2.AuthenticationResult>.value(
                  _FakeAuthenticationResult()))
          as _i4.Future<_i2.AuthenticationResult>);
  @override
  _i4.Future<_i2.AuthenticationResult> refreshSession({_i5.User? user}) =>
      (super.noSuchMethod(Invocation.method(#refreshSession, [], {#user: user}),
              returnValue: Future<_i2.AuthenticationResult>.value(
                  _FakeAuthenticationResult()))
          as _i4.Future<_i2.AuthenticationResult>);
  @override
  _i4.Future<_i2.AuthenticationResult> logOut() =>
      (super.noSuchMethod(Invocation.method(#logOut, []),
              returnValue: Future<_i2.AuthenticationResult>.value(
                  _FakeAuthenticationResult()))
          as _i4.Future<_i2.AuthenticationResult>);
  @override
  _i4.Future<_i2.AuthenticationResult> requestPasswordReset(
          {String? username}) =>
      (super.noSuchMethod(
          Invocation.method(#requestPasswordReset, [], {#username: username}),
          returnValue: Future<_i2.AuthenticationResult>.value(
              _FakeAuthenticationResult())) as _i4
          .Future<_i2.AuthenticationResult>);
  @override
  _i4.Future<_i2.AuthenticationResult> setPassword(
          {_i5.User? user, String? code, String? password}) =>
      (super.noSuchMethod(
              Invocation.method(#setPassword, [],
                  {#user: user, #code: code, #password: password}),
              returnValue: Future<_i2.AuthenticationResult>.value(
                  _FakeAuthenticationResult()))
          as _i4.Future<_i2.AuthenticationResult>);
  @override
  _i4.Future<_i2.AuthenticationResult> changePassword(
          {_i5.User? user, String? oldPassword, String? newPassword}) =>
      (super.noSuchMethod(
              Invocation.method(#changePassword, [], {
                #user: user,
                #oldPassword: oldPassword,
                #newPassword: newPassword
              }),
              returnValue: Future<_i2.AuthenticationResult>.value(
                  _FakeAuthenticationResult()))
          as _i4.Future<_i2.AuthenticationResult>);
  @override
  _i4.Future<_i2.AuthenticationAttributesResult> getUserAttributes() =>
      (super.noSuchMethod(Invocation.method(#getUserAttributes, []),
              returnValue: Future<_i2.AuthenticationAttributesResult>.value(
                  _FakeAuthenticationAttributesResult()))
          as _i4.Future<_i2.AuthenticationAttributesResult>);
  @override
  _i4.Future<_i2.AuthenticationAttributesResult> getAttributeVerificationCode(
          {String? attribute}) =>
      (super.noSuchMethod(
              Invocation.method(
                  #getAttributeVerificationCode, [], {#attribute: attribute}),
              returnValue: Future<_i2.AuthenticationAttributesResult>.value(
                  _FakeAuthenticationAttributesResult()))
          as _i4.Future<_i2.AuthenticationAttributesResult>);
  @override
  _i4.Future<_i2.AuthenticationAttributesResult> verifyAttribute(
          {String? attribute, String? code}) =>
      (super.noSuchMethod(
              Invocation.method(
                  #verifyAttribute, [], {#attribute: attribute, #code: code}),
              returnValue: Future<_i2.AuthenticationAttributesResult>.value(
                  _FakeAuthenticationAttributesResult()))
          as _i4.Future<_i2.AuthenticationAttributesResult>);
  @override
  _i4.Future<_i2.AuthenticationAttributesResult> updateAttributes(
          {Map<String, dynamic>? attributes}) =>
      (super.noSuchMethod(
          Invocation.method(#updateAttributes, [], {#attributes: attributes}),
          returnValue: Future<_i2.AuthenticationAttributesResult>.value(
              _FakeAuthenticationAttributesResult())) as _i4
          .Future<_i2.AuthenticationAttributesResult>);
}

/// A class which mocks [Box].
///
/// See the documentation for Mockito's code generation for more information.
class MockBox<E> extends _i1.Mock implements _i6.Box<E> {
  MockBox() {
    _i1.throwOnMissingStub(this);
  }

  @override
  Iterable<E> get values =>
      (super.noSuchMethod(Invocation.getter(#values), returnValue: [])
          as Iterable<E>);
  @override
  Iterable<E> valuesBetween({dynamic startKey, dynamic endKey}) =>
      (super.noSuchMethod(
          Invocation.method(
              #valuesBetween, [], {#startKey: startKey, #endKey: endKey}),
          returnValue: []) as Iterable<E>);
  @override
  E? getAt(int? index) =>
      (super.noSuchMethod(Invocation.method(#getAt, [index])) as E?);
  @override
  Map<dynamic, E> toMap() => (super.noSuchMethod(Invocation.method(#toMap, []),
      returnValue: <dynamic, E>{}) as Map<dynamic, E>);
}
